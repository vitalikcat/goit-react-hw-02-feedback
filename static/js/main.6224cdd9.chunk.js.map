{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App.jsx","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","ul","li","defaultProps","FeedbackOptions","options","onLeaveFeedback","button","type","name","onClick","Section","title","children","h2","Notification","message","p","App","state","handleClick","event","target","setState","props","step","this","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","Component","ReactDOM","render","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,GAAK,uBAAuB,GAAK,yB,gBCAnDD,EAAOC,QAAU,CAAC,OAAS,kC,sBCA3BD,EAAOC,QAAU,CAAC,GAAK,sB,gBCAvBD,EAAOC,QAAU,CAAC,EAAI,0B,2KCGhBC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,wBAAIC,UAAWC,IAAOC,IACpB,wBAAIF,UAAWC,IAAOE,IAAtB,SAAiCR,GACjC,wBAAIK,UAAWC,IAAOE,IAAtB,YAAoCP,GACpC,wBAAII,UAAWC,IAAOE,IAAtB,QAAgCN,GAChC,wBAAIG,UAAWC,IAAOE,IAAtB,WAAmCL,GACnC,wBAAIE,UAAWC,IAAOE,IAAtB,sBAA8CJ,EAA9C,OAIJL,EAAWU,aAAe,CACxBN,MAAO,EACPC,mBAAoB,GAWPL,Q,gBCUAW,EAjCS,SAAC,GAAD,EAAGC,QAAH,IAAYC,EAAZ,EAAYA,gBAAZ,OACtB,6BACE,4BACEP,UAAWC,IAAOO,OAClBC,KAAK,SACLC,KAAK,OACLC,QAASJ,GAJX,QAQA,4BACEP,UAAWC,IAAOO,OAClBC,KAAK,SACLC,KAAK,UACLC,QAASJ,GAJX,WAQA,4BACEP,UAAWC,IAAOO,OAClBC,KAAK,SACLC,KAAK,MACLC,QAASJ,GAJX,S,gBCNWK,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,iCACE,wBAAId,UAAWC,IAAOc,IAAKF,GAC1BC,I,iBCGUE,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,uBAAGjB,UAAWC,IAAOiB,GAAID,ICG1CE,E,2MASnBC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPwB,YAAc,SAAAC,GAAU,IACdZ,EAASY,EAAMC,OAAfb,KAER,EAAKc,UAAS,SAACJ,EAAOK,GACpB,OAAO,eACJf,EAAOU,EAAMV,GAAQe,EAAMC,U,oFAKZ,IAAD,EACYC,KAAKP,MACpC,OAFmB,EACXzB,KADW,EACLC,QADK,EACIC,M,wDAIU,IACzBF,EAASgC,KAAKP,MAAdzB,KACFG,EAAQ6B,KAAKC,qBAGnB,OAFaC,KAAKC,MAAc,IAAPnC,EAAcG,K,+BAK/B,IAAD,EACwB6B,KAAKP,MAA5BzB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,6BACE,kBAAC,EAAD,CAASgB,MAAM,yBACb,kBAAC,EAAD,CACEP,QAASqB,KAAKP,MACdb,gBAAiBoB,KAAKN,eAI1B,kBAAC,EAAD,CAASR,MAAM,cACZc,KAAKC,qBAAuB,EAC3B,kBAAC,EAAD,CACEjC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO6B,KAAKC,qBACZ7B,mBAAoB4B,KAAKI,oCAG3B,kBAAC,EAAD,CAAcd,QAAQ,4B,GA5DDe,aAAZb,EACZf,aAAe,CACpBsB,KAAM,GCLVO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6224cdd9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"Statistics_ul__cvpcM\",\"li\":\"Statistics_li__1hLVV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__kcmF9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"Section_h2__dLdug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p\":\"Notification_p__2Fj4S\"};","import React from \"react\";\r\nimport styles from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <ul className={styles.ul}>\r\n    <li className={styles.li}>Good: {good}</li>\r\n    <li className={styles.li}>Neutral: {neutral}</li>\r\n    <li className={styles.li}>Bad: {bad}</li>\r\n    <li className={styles.li}> Total: {total}</li>\r\n    <li className={styles.li}>Positive feedback: {positivePercentage}%</li>\r\n  </ul>\r\n);\r\n\r\nStatistics.defaultProps = {\r\n  total: 0,\r\n  positivePercentage: 0\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport styles from './FeedbackOptions.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div>\r\n    <button\r\n      className={styles.button}\r\n      type=\"button\"\r\n      name=\"good\"\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      Good\r\n    </button>\r\n    <button\r\n      className={styles.button}\r\n      type=\"button\"\r\n      name=\"neutral\"\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      Neutral\r\n    </button>\r\n    <button\r\n      className={styles.button}\r\n      type=\"button\"\r\n      name=\"bad\"\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      Bad\r\n    </button>\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport styles from \"./Section.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2 className={styles.h2}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styles from \"./Notification.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p className={styles.p}>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport Statistics from \"./Statistics/Statistics\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Section from \"./Section/Section\";\nimport Notification from \"./Notification/Notification\";\nimport PropTypes from \"prop-types\";\n\nexport default class App extends Component {\n  static defaultProps = {\n    step: 1\n  };\n\n  static propTypes = {\n    step: PropTypes.number.isRequired\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  handleClick = event => {\n    const { name } = event.target;\n\n    this.setState((state, props) => {\n      return {\n        [name]: state[name] + props.step\n      };\n    });\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    let result = Math.round((good * 100) / total);\n\n    return result;\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleClick}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}